#include<iostream>
#include<vector>
#include<string.h>
using namespace std;
const int N = 101;
struct qipan
{
	char seting[8][8];
	int cnt;
};
qipan p[N];

bool isSame(qipan a, qipan b)
{
	for (int i = 0; i < 8; i++)
		for (int j = 0; j < 8; j++)
			if (a.seting[i][j] != b.seting[i][j])
				return false;
	return true;
	//相等返回true
}
int main()
{
	int n; cin >> n;
	for (int i = 0; i < n; i++)
	{
		//表示第 i 个棋盘
		for (int j = 0; j < 8; j++)
		{
			//表示第 j 行
			for (int t = 0; t < 8; t++)
			{
				//第 t 列 
				cin >> p[i].seting[j][t];
			}
		}//输入并保存
		
		bool same = false;
		for (int j = 0; j <= i - 1; j++)
		{
			 bool temp = isSame(p[i], p[j]);
			 if (temp) {
				 //如果该棋盘和之前某一棋盘相似
				 p[i].cnt = p[j].cnt + 1;
				 same = true;
			 }
		}
		//如果不相同
		if(!same)
			p[i].cnt = 1;
	}
	
	for (int i = 0; i < n; i++)
		cout << p[i].cnt << endl;
}
